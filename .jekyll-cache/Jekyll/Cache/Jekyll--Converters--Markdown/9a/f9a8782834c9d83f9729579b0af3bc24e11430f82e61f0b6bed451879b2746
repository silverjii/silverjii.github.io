I"O8<ul>
  <li>강의 내용기록
강의 : youtube, 드림코딩 by 엘리 (자바스크립트 7. 오브젝트 넌 뭐니?)</li>
</ul>

<h1 id="object">object</h1>
<h4 id="--literal-and-properties">- Literal and properties</h4>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"> 
<span class="c1">// object = {key : value};</span>

<span class="c1">// </span>
<span class="kd">const</span> <span class="nx">obj1</span> <span class="o">=</span> <span class="p">{};</span>  <span class="c1">// 'object literal'</span>
<span class="kd">const</span> <span class="nx">obj2</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Object</span><span class="p">();</span>  <span class="c1">// 'object constructor'</span>

<span class="kd">function</span> <span class="nx">print</span><span class="p">(</span><span class="nx">person</span><span class="p">){</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">person</span><span class="p">.</span><span class="nx">name</span><span class="p">);</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">person</span><span class="p">.</span><span class="nx">age</span><span class="p">);</span>
<span class="p">}</span>
<span class="kd">const</span> <span class="nx">eliie</span> <span class="o">=</span> <span class="p">{</span><span class="na">name</span> <span class="p">:</span> <span class="dl">'</span><span class="s1">ellie</span><span class="dl">'</span><span class="p">,</span> <span class="na">age</span><span class="p">:</span><span class="mi">4</span><span class="p">};</span>
<span class="nx">print</span><span class="p">(</span><span class="nx">ellie</span><span class="p">);</span>

<span class="nx">ellie</span><span class="p">.</span><span class="nx">hasJob</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span> <span class="c1">// 뒤늦게 추가 가능.</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">ellie</span><span class="p">.</span><span class="nx">hasJob</span><span class="p">);</span> <span class="c1">// true</span>

<span class="k">delete</span> <span class="nx">ellie</span><span class="p">.</span><span class="nx">hasJob</span><span class="p">;</span> <span class="c1">// 뒤늦게 삭제도 가능.</span></code></pre></figure>

<h4 id="--computed-properties">- Computed properties</h4>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"> 

<span class="c1">// key는 string타입으로</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">ellie</span><span class="p">.</span><span class="nx">name</span><span class="p">);</span> <span class="c1">// ellie, key에 해당하는 값을 받아오고 싶을 때 사용</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">ellie</span><span class="p">[</span><span class="dl">'</span><span class="s1">name</span><span class="dl">'</span><span class="p">]);</span> <span class="c1">// ellie, 정확하게 어떤 키가 필요한지 모를 때 사용</span>

<span class="kd">function</span> <span class="nx">printValue</span><span class="p">(</span><span class="nx">obj</span><span class="p">,</span> <span class="nx">key</span><span class="p">){</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">obj</span><span class="p">.</span><span class="nx">key</span><span class="p">);</span> <span class="c1">// undefined</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">obj</span><span class="p">[</span><span class="nx">key</span><span class="p">]);</span> <span class="c1">// ellie </span>
<span class="p">}</span>

<span class="nx">printValue</span><span class="p">(</span><span class="nx">ellie</span><span class="p">,</span> <span class="dl">'</span><span class="s1">name</span><span class="dl">'</span><span class="p">);</span></code></pre></figure>

<h4 id="--property-value-shorthand-constructor-function">- Property value shorthand, Constructor Function</h4>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"> 
<span class="c1">// object를 필요할 때 하나씩 만들다보면 불가피하게 동일한 key와 value를 반복해서 작성해야하는 문제점이 있어 함수를 이용해서 값만 전달.</span>

<span class="kd">const</span> <span class="nx">person1</span> <span class="o">=</span> <span class="p">{</span><span class="na">name</span> <span class="p">:</span> <span class="dl">'</span><span class="s1">bob</span><span class="dl">'</span><span class="p">,</span> <span class="na">age</span><span class="p">:</span><span class="mi">2</span><span class="p">};</span>
<span class="kd">const</span> <span class="nx">person2</span> <span class="o">=</span> <span class="p">{</span><span class="na">name</span> <span class="p">:</span> <span class="dl">'</span><span class="s1">steve</span><span class="dl">'</span><span class="p">,</span> <span class="na">age</span><span class="p">:</span><span class="mi">3</span><span class="p">};</span>
<span class="kd">const</span> <span class="nx">person3</span> <span class="o">=</span> <span class="p">{</span><span class="na">name</span> <span class="p">:</span> <span class="dl">'</span><span class="s1">dave</span><span class="dl">'</span> <span class="na">age</span><span class="p">:</span><span class="mi">4</span><span class="p">};</span>

<span class="kd">const</span> <span class="nx">person4</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Person</span><span class="p">(</span><span class="dl">'</span><span class="s1">ellie</span><span class="dl">'</span><span class="p">,</span><span class="mi">30</span><span class="p">);</span>

<span class="c1">// 다른 계산을 하지 않고 순수하게 object를 생성하는 함수는 대분자로 시작.</span>
<span class="kd">function</span> <span class="nx">Person</span><span class="p">(</span><span class="nx">name</span><span class="p">,</span> <span class="nx">age</span><span class="p">){</span>
   <span class="k">this</span><span class="p">.</span><span class="nx">name</span> <span class="o">=</span> <span class="nx">name</span><span class="p">;</span>
   <span class="k">this</span><span class="p">.</span><span class="nx">age</span> <span class="o">=</span> <span class="nx">age</span><span class="p">;</span>
<span class="p">}</span></code></pre></figure>

<h4 id="--in-operator">- in operator</h4>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"> 
<span class="c1">// 해당하는 object안에 key가 있는지 없는지 확인.</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">name</span><span class="dl">'</span> <span class="k">in</span> <span class="nx">ellie</span><span class="p">);</span> <span class="c1">//true</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">age</span><span class="dl">'</span> <span class="k">in</span> <span class="nx">ellie</span><span class="p">);</span> <span class="c1">//true</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">random</span><span class="dl">'</span> <span class="k">in</span> <span class="nx">ellie</span><span class="p">)</span> <span class="c1">// false</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">ellie</span><span class="p">.</span><span class="nx">random</span><span class="p">)</span> <span class="c1">// 정의하지 않은 키를 접근하면 undefined</span></code></pre></figure>

<h4 id="--forin-vs-forof">- for..in vs for..of</h4>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"> 
<span class="c1">// for(key in obj)</span>
<span class="k">for</span> <span class="p">(</span><span class="nx">key</span> <span class="k">in</span> <span class="nx">ellie</span><span class="p">){</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">key</span><span class="p">);</span> <span class="c1">// name age hasJob</span>
<span class="p">}</span>

<span class="c1">// for(value of iterable){</span>
    <span class="kd">const</span> <span class="nx">array</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">];</span>
    <span class="k">for</span><span class="p">(</span><span class="kd">let</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">array</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">){</span>
        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">array</span><span class="p">[</span><span class="nx">i</span><span class="p">]);</span>
    <span class="p">}</span>

    <span class="c1">// 같은 값조금 더 쉽게 변경</span>
    <span class="k">for</span><span class="p">(</span><span class="nx">value</span> <span class="k">of</span> <span class="nx">array</span><span class="p">){</span>
        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">value</span><span class="p">)</span>
    <span class="p">}</span>
<span class="p">}</span></code></pre></figure>

<h4 id="--cloning">- cloning</h4>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"> 
<span class="kd">const</span> <span class="nx">user</span> <span class="o">=</span> <span class="p">{</span><span class="na">name</span> <span class="p">:</span> <span class="dl">'</span><span class="s1">ellie</span><span class="dl">'</span><span class="p">,</span> <span class="na">age</span> <span class="p">:</span> <span class="dl">'</span><span class="s1">20</span><span class="dl">'</span><span class="p">};</span>
<span class="kd">const</span> <span class="nx">user2</span> <span class="o">=</span> <span class="nx">user</span><span class="p">;</span>

<span class="nx">user2</span><span class="p">.</span><span class="nx">name</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">coder</span><span class="dl">'</span><span class="p">;</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">user</span><span class="p">);</span> <span class="c1">// {name : "coder", age : "20"}</span>

<span class="c1">// old way</span>
<span class="kd">const</span> <span class="nx">user3</span> <span class="o">=</span> <span class="p">{};</span>
<span class="k">for</span> <span class="p">(</span><span class="nx">key</span> <span class="k">in</span> <span class="nx">user</span><span class="p">){</span>
    <span class="nx">user3</span><span class="p">[</span><span class="nx">key</span><span class="p">]</span> <span class="o">=</span> <span class="nx">user</span><span class="p">[</span><span class="nx">key</span><span class="p">];</span>
<span class="p">}</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">user3</span><span class="p">);</span> <span class="c1">// {name : "coder", age : "20"}</span>

<span class="c1">// assign</span>
<span class="kd">const</span> <span class="nx">user4</span> <span class="o">=</span> <span class="p">{};</span>
<span class="nb">Object</span><span class="p">.</span><span class="nx">assign</span><span class="p">(</span><span class="nx">user4</span><span class="p">,</span> <span class="nx">user</span><span class="p">);</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">user4</span><span class="p">);</span> <span class="c1">// {name : "coder", age : "20"};</span>

<span class="c1">// another example</span>
<span class="kd">const</span> <span class="nx">fruit1</span> <span class="o">=</span> <span class="p">{</span><span class="na">color</span> <span class="p">:</span> <span class="dl">'</span><span class="s1">red</span><span class="dl">'</span><span class="p">};</span>
<span class="kd">const</span> <span class="nx">fruit2</span> <span class="o">=</span> <span class="p">{</span><span class="na">color</span> <span class="p">:</span> <span class="dl">'</span><span class="s1">blue</span><span class="dl">'</span><span class="p">,</span> <span class="na">size</span> <span class="p">:</span> <span class="dl">'</span><span class="s1">big</span><span class="dl">'</span><span class="p">};</span>
<span class="kd">const</span> <span class="nx">mixed</span> <span class="o">=</span> <span class="nb">Object</span><span class="p">.</span><span class="nx">assign</span><span class="p">({},</span> <span class="nx">fruit1</span><span class="p">,</span> <span class="nx">fruit2</span><span class="p">);</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">mixed</span><span class="p">.</span><span class="nx">color</span><span class="p">);</span> <span class="c1">// blue</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">mixed</span><span class="p">.</span><span class="nx">size</span><span class="p">);</span> <span class="c1">// big</span></code></pre></figure>

:ET